github's repository --> 원격 Repository or Remote Repository

내 컴퓨터의 repository ( C:/Users/yunaj/GitPractice/.git/ ) --> Local Repository
----------------------------------------------------------------------------------------

Local Repository의 내용을 Remote Repository로 보내깅 

# 기존의 local repository가 있는 경우 

1. 일단 local repository로 이동 (.git 이 있는 경로)


yunajoe@yunajoe MINGW64 ~
$ cd GitPractice

yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ git remote add origin https://github.com/yunajoe/git_practice.git


$ git push -u origin master

Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 12 threads
Compressing objects: 100% (7/7), done.
Writing objects: 100% (10/10), 772 bytes | 772.00 KiB/s, done.
Total 10 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yunajoe/git_practice.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.

깃헙에 들어가서 새로고침을 눌러보면은! local에 있는 파일들이 remote에 들어갔땅
---------------------------------------------------------------------------------------- 
 Local Repository에서 바뀐 내용을 Remote Repository에도 반영하기 


1. local repository에 README.MD 파일 만들기 

2. cmd로 와서 파일 확인해보깅

yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ ls
README.md  calculator.py  linecense  meeting-log/


3. staging에 올리기 
$ git add .  

4. local repository commit하기 (remote repository에에는 아직 commit되지 않은 상태) 

yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ git commit -m "Create README.md"

5. local repository에 있는 내용을 remote repository에 반영하기 
$ git push
----------------------------------------------------------------------------------------
# remote repository에서 바뀐 내용을 local Repository에도 반영하기 

1. remote repository의 readme.MD를 변경해주었다. 

2. 리모트 레포지토리 -> 로컬 레포지토리 
yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ git pull

yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ cat README.md
----------------------------------------------------------------------------------------
요약:
1. 로컬 레포지토리 -> 리모트 레포지토리 (git push) 
2. 리모트 레포지토리 -> 로컬 레포지토리(git pull) 

# 리모트를 왜 쓸까? ( 로컬과 같은 내용의?) 
1. 안정성
2. 협업 
----------------------------------------------------------------------------------------
 아무나 git push를 할 수 있는 건 아닙니다

git push는 리모트 레포지토리의 주인, 그러니까 본인만 할 수 있습니다. 
만약 본인이 아닌 다른 사용자도 git push를 할 수 있게 하려면 GitHub에서 추가 작업을 해줘야 합니다. 

# 공유하고싶은 repository의 settings에서 
Collaboators -> Manage access -> add people 
----------------------------------------------------------------------------------------
### 다른 프로젝트 가져오기
가져고올 프로젝트 repository를 copy하깅  --> https://github.com/kakao/khaiii.git

yunajoe@yunajoe MINGW64 ~/GitPractice (master)
$ cd .. 

yunajoe@yunajoe MINGW64 ~
$ git clone https://github.com/kakao/khaiii.git

*git clone
--> 깃허브 프로젝트의 레포지토리를 그대로 복제한다  

yunajoe@yunajoe MINGW64 ~  
$ cd khaiii  

yunajoe@yunajoe MINGW64 ~/khaiii (master)
$ ls -al
total 95
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 ./
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 ../
-rw-r--r-- 1 yunajoe 197609   465 Jul  4 22:00 .clabot
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 .git/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 .github/
-rw-r--r-- 1 yunajoe 197609    22 Jul  4 22:00 .gitignore
-rw-r--r-- 1 yunajoe 197609  8101 Jul  4 22:00 CMakeLists.txt
-rw-r--r-- 1 yunajoe 197609  1037 Jul  4 22:00 CONTRIBUTING.md
-rw-r--r-- 1 yunajoe 197609 11560 Jul  4 22:00 LICENSE
-rw-r--r-- 1 yunajoe 197609 23414 Jul  4 22:00 NOTICE.md
-rw-r--r-- 1 yunajoe 197609  8865 Jul  4 22:00 README.md
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 cmake/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 docker/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 include/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 munjong/
-rw-r--r-- 1 yunajoe 197609    13 Jul  4 22:00 requirements.txt
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 rsc/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 src/
drwxr-xr-x 1 yunajoe 197609     0 Jul  4 22:00 train/  
----------------------------------------------------------------------------------------
git push -u origin master : local repository를 remote repository에 올릴 때 사용
git push : local repository의 내용을 remote repository에 보내기 
git pull : remote repository의 내용을 local repository로 가져오기
git clone [프로젝트의 GitHub 상 주소] : GitHub에 있는 프로젝트를 내 컴퓨터로 가져오기

----------------------------------------------------------------------------------------
# 기존에 있던 remote repository(하지만 local repository는 없을 때)에 local repository에서 remote repository 랑 연결할려면!

## 경로 새로 만들기
yunajoe@yunajoe MINGW64 ~
$ mkdir CS_BASICS

yunajoe@yunajoe MINGW64 ~
$ cd CS_BASICS

yunajoe@yunajoe MINGW64 ~/CS_BASICS
$ git init
Initialized empty Git repository in C:/Users/yunaj/CS_BASICS/.git/
yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)

# 파일하나 넣어주기
$ ls
가상화종류.txt


yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)
$ git config user.name "yunajoe"

yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)
$ git config user.email "yunajoe@gmail.com"

# 커밋내용
yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)
$ git commit -m "vitual_commit"

#  commit할 repository 주소 
yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)
$ git remote add origin https://github.com/yunajoe/Computer-Science-Basic.git

yunajoe@yunajoe MINGW64 ~/CS_BASICS (master)
$ git push -u origin master


